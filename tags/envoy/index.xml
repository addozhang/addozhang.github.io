<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envoy on 乱世浮生</title><link>https://atbug.com/tags/envoy/</link><description>Recent content in Envoy on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 09 Dec 2020 20:00:00 +0800</lastBuildDate><atom:link href="https://atbug.com/tags/envoy/index.xml" rel="self" type="application/rss+xml"/><item><title>Envoy listener filter times out 问题</title><link>https://atbug.com/envoy-listener-filter-times-out/</link><pubDate>Wed, 09 Dec 2020 20:00:00 +0800</pubDate><guid>https://atbug.com/envoy-listener-filter-times-out/</guid><description>
&lt;p>最近在看 openservicemesh 相关内容，这周更新了 main 分支的代码之后。发现原本 v0.5.0 时可以正常代理的 mysql 流量，在新的 commit 中无法代理了。&lt;/p>
&lt;p>开启 envoy 的 filter debug 日志后发现出现了超时。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">[2020-12-09 08:54:42.285][15][debug][filter] [source/extensions/filters/listener/original_dst/original_dst.cc:18] original_dst: New connection accepted
[2020-12-09 08:54:42.285][15][debug][filter] [source/extensions/filters/listener/http_inspector/http_inspector.cc:38] http inspector: new connection accepted
[2020-12-09 08:54:42.285][15][trace][filter] [source/extensions/filters/listener/http_inspector/http_inspector.cc:105] http inspector: recv: 0
[2020-12-09 08:54:57.286][15][debug][conn_handler] [source/server/connection_handler_impl.cc:273] listener filter times out after 15000 ms
&lt;/code>&lt;/pre>&lt;/div>&lt;p>贴一下 outbound listener 的配置片段:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;@type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;type.googleapis.com/envoy.admin.v3.ListenersConfigDump&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;version_info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;dynamic_listeners&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;outbound_listener&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;active_state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;version_info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;listener&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;@type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;outbound_listener&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;socket_address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;port_value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15001&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;filter_chains&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">//省略其他&lt;/span> &lt;span class="err">filter&lt;/span> &lt;span class="err">chain&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;filters&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;envoy.filters.network.tcp_proxy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;typed_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;@type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;stat_prefix&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;passthrough-outbound&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;passthrough-outbound&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;outbound-egress-filter-chain&amp;#34;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nt">&amp;#34;listener_filters&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;envoy.filters.listener.original_dst&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;envoy.filters.listener.http_inspector&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;traffic_direction&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;OUTBOUND&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;last_updated&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2020-12-08T10:07:41.191Z&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="分析">分析&lt;/h3>
&lt;p>Envoy 那边看到了有个 &lt;a href="https://github.com/envoyproxy/envoy/issues/7195">issue&lt;/a>，为此增加了 timeout 的设置，默认 15s。&lt;/p>
&lt;ul>
&lt;li>&lt;code>listener_filters_timeout&lt;/code>：默认 15s。等待 listener filter 完成的超时时间，如果设置为 0，则不超时。如果没有设置下面的配置为&lt;code>true&lt;/code>，则会直接关闭连接。&lt;/li>
&lt;li>&lt;code>continue_on_listener_filters_timeout&lt;/code>：默认 &lt;code>false&lt;/code>。超时时是否使用默认的 filter_chain 创建连接。&lt;/li>
&lt;/ul>
&lt;p>对比之前的版本，不同之处是在 filter 中多了 &lt;code>envoy.filters.listener.http_inspector&lt;/code>。一个 http_inspector 为何 hold 住整个 follow。&lt;/p>
&lt;p>正好昨天&lt;a href="https://mp.weixin.qq.com/s/pmDw779cfj8SXjqAni3mCA">配置了 Clion 用于源码阅读&lt;/a>，看下 &lt;code>http_inspector&lt;/code> 的源码：&lt;/p>
&lt;p>在&lt;code>http_inspector.cc&lt;/code>的&lt;code>onRead&lt;/code>方法，在做&lt;code>MSG_PEEK&lt;/code>是铁定读不到数据的，见上面的日志，同时查看 stats &lt;code>http_inspector.read_error: 0&lt;/code>。可见，返回了&lt;code>ParseState::Continue&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>Api::IoError::IoErrorCode::Again&lt;/code>的意思是：&lt;code>No data available right now, try again later.&lt;/code>
对于&lt;code>ParseState::Continue&lt;/code>的解释是：&lt;code>Parser expects more data.&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2020/12/09/screenshot-20201209-at-165537.png" alt="screenshot 2020-12-09 at 16.55.37">&lt;/p>
&lt;p>由于&lt;code>onRead&lt;/code>返回了&lt;code>ParseState::Continue&lt;/code>，&lt;code>onAccept&lt;/code>方法会返回 &lt;code>Network::FilterStatus::StopIteration&lt;/code>。返回之前会注册个针对&lt;code>Event::FileReadyType::Read | Event::FileReadyType::Closed&lt;/code> 的 callback，用于读取到数据或者关闭文件时进行回调处理。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>Network::FilterStatus::StopIteration&lt;/code>：&lt;code>Stop executing further filters.&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2020/12/09/screenshot-20201209-at-165220.png" alt="screenshot 2020-12-09 at 16.52.20">&lt;/p>
&lt;p>&lt;code>source/server/connection_handler_impl.cc&lt;/code> 的 &lt;code>continueFilterChain&lt;/code>方法，看注释：&lt;code>Blocking at the filter but no error&lt;/code>。等待上面的 callback 被调用。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2020/12/09/screenshot-20201209-at-171328.png" alt="screenshot 2020-12-09 at 17.13.28">&lt;/p>
&lt;p>由于前面直接从&lt;code>for&lt;/code> loop 中跳出，迭代并没有执行到&lt;code>end&lt;/code>，会启动一个超时的 timer。
&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2020/12/09/screenshot-20201209-at-172017.png" alt="screenshot 2020-12-09 at 17.20.17">&lt;/p>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/pmDw779cfj8SXjqAni3mCA">配置 Clion 阅读 envoy 源码&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/envoyproxy/envoy/issues/7195">allow fallback to default filter chain when listener filters timeout&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>