<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nginx on 乱世浮生</title><link>https://atbug.com/tags/nginx/</link><description>Recent content in nginx on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 06 Nov 2018 09:24:24 +0000</lastBuildDate><atom:link href="https://atbug.com/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>Nginx实现Elasticsearch的HTTP基本认证</title><link>https://atbug.com/elasticsearch-http-basic-authentication-via-nginx/</link><pubDate>Tue, 06 Nov 2018 09:24:24 +0000</pubDate><guid>https://atbug.com/elasticsearch-http-basic-authentication-via-nginx/</guid><description>
&lt;p>Elasticssearch的HTTP基本认证实现有两种方案: x-pack和nginx反向代理. 前者收费, 后者不太适合生产使用. 如果仅仅是开发测试, 第二种完全足够.&lt;/p>
&lt;h3 id="创建密码">创建密码&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">htpasswd -bc ./passwd &lt;span class="o">[&lt;/span>username&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>password&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="docker-compose">Docker compose&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">elasticsearch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">elasticsearch:5.5.2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">elasticsearch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp/elasticsearch:/usr/share/elasticsearch/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">elasticsearch-proxy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">9200&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">9200&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">elasticsearch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./passwd:/etc/nginx/.passwd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./default.conf:/etc/nginx/conf.d/default.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nginx配置文件">nginx配置文件&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">upstream es {
server elasticsearch:9200;
keepalive 15;
}
server {
listen 9200;
server_name localhost;
access_log /dev/stdout;
error_log /dev/stdout;
location / {
auth_basic &amp;#34;Administrator’s Area&amp;#34;;
auth_basic_user_file /etc/nginx/.passwd;
proxy_http_version 1.1;
proxy_set_header Connection &amp;#34;Keep-Alive&amp;#34;;
proxy_set_header Proxy-Connection &amp;#34;Keep-Alive&amp;#34;;
proxy_pass http://es;
}
location /health {
access_log off;
return 200 &amp;#34;healthy\n&amp;#34;;
}
#error_page 404 /404.html;
# redirect server error pages to the static page /50x.html
#
error_page 500 502 503 504 /50x.html;
location = /50x.html {
root html;
}
# proxy the PHP scripts to Apache listening on 127.0.0.1:80
#
#location ~ \.php$ {
# proxy_pass http://127.0.0.1;
#}
# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
#location ~ \.php$ {
# root html;
# fastcgi_pass 127.0.0.1:9000;
# fastcgi_index index.php;
# fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;
# include fastcgi_params;
#}
# deny access to .htaccess files, if Apache&amp;#39;s document root
# concurs with nginx&amp;#39;s one
#
#location ~ /\.ht {
# deny all;
#}
}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kubernetes中的Nginx动态解析</title><link>https://atbug.com/nginx-dynamic-domain-parse-in-kubernetes/</link><pubDate>Wed, 30 May 2018 12:10:32 +0000</pubDate><guid>https://atbug.com/nginx-dynamic-domain-parse-in-kubernetes/</guid><description>
&lt;h3 id="背景">背景&lt;/h3>
&lt;p>Nginx运行在kubernets中, 反向代理service提供服务.&lt;/p>
&lt;p>kubernetes版本v1.9.1+a0ce1bc657.&lt;/p>
&lt;h3 id="问题">问题:&lt;/h3>
&lt;p>配置如下:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">location ^~/info {
proxy_pass: http://serviceName:port;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除并重建Service的时候, nginx会出现下面的问题:&lt;/p>
&lt;blockquote>
&lt;p>connect() failed (113: No route to host) &amp;hellip; upstream: &amp;ldquo;xxxxx&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;h3 id="分析">分析&lt;/h3>
&lt;p>通过google发现, 是nginx的dns解析方案的问题.&lt;/p>
&lt;p>nginx官方的说明:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>If the domain name can’t be resolved, NGINX fails to start or reload its configuration.&lt;/li>
&lt;li>NGINX caches the DNS records until the next restart or configuration reload, ignoring the records’ TTL values.&lt;/li>
&lt;li>We can’t specify another load‑balancing algorithm, nor can we configure passive health checks or other features defined by parameters to the server directive, which we’ll describe in the next section.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>意思是说, nginx在启动的时候就会解析&lt;code>proxy_pass&lt;/code>后的域名, 并把&lt;code>ip&lt;/code>缓存下来, 而且没有TTL. 只有在restart或者reload的时候才会再次解析.&lt;/p>
&lt;h3 id="解决方案">解决方案&lt;/h3>
&lt;p>使用nginx pod的解析服务器作为resolver:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">#nginx conf
resolver NAME_SERVER valid=30s ipv6=off;
set $service &amp;#34;http://serviceName:port&amp;#34;;
location ^~/info {
proxy_pass: $service;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用shell获取pod中使用的解析服务器&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nv">NAME_SERVER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>cat /etc/resolv.conf &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;nameserver&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tr &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:
&lt;a href="https://stackoverflow.com/questions/17685674/nginx-proxy-pass-with-remote-addr">Nginx proxy_pass with $remote_addr&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://tenzer.dk/nginx-with-dynamic-upstreams/">Nginx with dynamic upstreams&lt;/a>&lt;/p>
&lt;h3 id="另一个问题">另一个问题&lt;/h3>
&lt;blockquote>
&lt;p>serviceName could not be resolved (3: Host not found)&lt;/p>
&lt;/blockquote>
&lt;p>service的短名称是解析不了的, 需要使用serviceName.namespace.svc.clusterName.&lt;/p></description></item></channel></rss>