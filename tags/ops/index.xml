<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ops on 乱世浮生</title><link>https://atbug.com/tags/ops/</link><description>Recent content in ops on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 12 Apr 2018 12:45:15 +0000</lastBuildDate><atom:link href="https://atbug.com/tags/ops/index.xml" rel="self" type="application/rss+xml"/><item><title>KVM安装手册</title><link>https://atbug.com/kvm-installation-note/</link><pubDate>Thu, 12 Apr 2018 12:45:15 +0000</pubDate><guid>https://atbug.com/kvm-installation-note/</guid><description>
&lt;h2 id="添加虚拟机流程">添加虚拟机流程：&lt;/h2>
&lt;pre>&lt;code>1. 配置网络
2. 配置存储池
3. 上传镜像
4. 安装虚拟机，指定配置
&lt;/code>&lt;/pre>
&lt;h3 id="安装kvm虚拟机">安装KVM虚拟机&lt;/h3>
&lt;h4 id="1-关闭防火墙selinux">1. 关闭防火墙，selinux&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># service iptables stop&lt;/span>
&lt;span class="c1"># setenforce 0 临时关闭&lt;/span>
&lt;span class="c1"># chkconfig NetworkManager off&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-安装kvm虚拟机">2. 安装kvm虚拟机&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># yum install kvm libvirt libvirt-devel python-virtinst python-virtinst qemu-kvm virt-viewer bridge-utils virt-top libguestfs-tools ca-certificates audit-libs-python device-mapper-libs virt-install&lt;/span>
&lt;span class="c1"># 启动服务&lt;/span>
&lt;span class="c1"># service libvirtd restart&lt;/span>
下载virtio-win-1.5.2-1.el6.noarch.rpm 如果不安装window虚拟机或者使用带virtio驱动的镜像可以不用安装
&lt;span class="c1"># rpm -ivh virtio-win-1.5.2-1.el6.noarch.rpm&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-libvirt在管理本地或远程hypervisor时的表现形式如下">3. Libvirt在管理本地或远程Hypervisor时的表现形式如下。&lt;/h4>
&lt;p>在libvirt内部管理了五部分：&lt;/p>
&lt;ul>
&lt;li>节点：所谓的节点就是我们的物理服务器，一个服务器代表一个节点，上边存放着Hyper和Domain&lt;/li>
&lt;li>Hypervisor：即VMM，指虚拟机的监控程序，在KVM中是一个加载了kvm.ko的标准Linux系统。&lt;/li>
&lt;li>域（Domain）：指虚拟机，一个域代表一个虚拟机（估计思路来源于Xen的Domain0）&lt;/li>
&lt;li>存储池（Storage Pool）：存储空间，支持多种协议和网络存储。作为虚拟机磁盘的存储源。&lt;/li>
&lt;li>卷组（Volume）：虚拟机磁盘在Host上的表现形式。
上边的五部分，我们必须使用的是前三个，因为很多时候根据业务规则或应用的灵活性并没有使用卷组（其实就是有了编制的虚拟磁盘文件），也就没有必要使用存储池。&lt;/li>
&lt;/ul>
&lt;h3 id="配置">配置&lt;/h3>
&lt;h4 id="1-修改网络配置">1. 修改网络配置&lt;/h4>
&lt;p>方案一 (推荐)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">brctl addbr br0 &amp;amp;&amp;amp; brctl addif br0 em1 &amp;amp;&amp;amp; brctl stp br0 on &amp;amp;&amp;amp; ifconfig em1 0.0.0.0 &amp;amp;&amp;amp; ifconfig br0 192.168.1.31 netmask 255.255.255.0 &amp;amp;&amp;amp; route add default gw 192.168.1.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>方案二&lt;/p>
&lt;p>&lt;a href="https://blog.csdn.net/wh211212/article/details/54141412">参考&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># vim /etc/sysconfig/network-scripts/ifcfg-br0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>DEVICE=br0
TYPE=Bridge
BOOTPROTO=static
BROADCAST=192.168.1.255
IPADDR=192.168.1.10
NETMASK=255.255.255.0
NETWORK=192.168.1.0
GATEWAY=192.168.1.1
DNS1=119.29.29.29
ONBOOT=yes&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># vim /etc/sysconfig/network-scripts/ifcfg-em1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>DEVICE=em1
BOOTPROTO=none
ONBOOT=yes
BRIDGE=br0&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># vim /etc/sysconfig/network-scripts/ifcfg-bond0 &lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>DEVICE=bond0
TYPE=Ethernet
NAME=bond0
BONDING_MASTER=yes
BOOTPROTO=none
BRIDGE=br0
ONBOOT=yes
BONDING_OPTS=&amp;ldquo;mode=5 miimon=100&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://www.jianshu.com/p/110b60c14a8b">方案三&lt;/a>&lt;/p>
&lt;h4 id="3-关闭宿主机的gso与tso功能">3. 关闭宿主机的GSO与TSO功能&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># ethtool -K em1 gso off&lt;/span>
&lt;span class="c1"># ethtool -K em1 tso off&lt;/span>
&lt;span class="c1"># systemctl restart network&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-创建基于文件夹的存储池目录">4. 创建基于文件夹的存储池（目录）&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># mkdir -p /home/vmdisk&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>定义存储池与其目录&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-define-as vmDiskPool --type dir --target /home/vmdisk&lt;/span>
Pool vmDiskPool defined
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建已定义的存储池&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-build vmDiskPool&lt;/span>
Pool vmDiskPool built
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看已定义的存储池，存储池不激活无法使用&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-list --all&lt;/span>
Name State Autostart
-----------------------------------------
vmDiskPool inactive no
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看存储卷信息&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-info vmDiskPool&lt;/span>
Name: vmDiskPool
UUID: 3fc996c4-9bfa-7fdc-2960-445e4c551855
State: inactive
Persistent: yes
Autostart: no
&lt;/code>&lt;/pre>&lt;/div>&lt;p>激活并自动启动已定义的存储池&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-autostart vmDiskPool&lt;/span>
Pool vmDiskPool marked as autostarted
&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动存储卷&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-start vmDiskPool&lt;/span>
Pool vmDiskPool started
&lt;/code>&lt;/pre>&lt;/div>&lt;p>再次查看存储卷信息&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-info vmDiskPool&lt;/span>
Name: vmDiskPool
UUID: 3fc996c4-9bfa-7fdc-2960-445e4c551855
State: running
Persistent: yes
Autostart: yes
Capacity: 39.25 GiB
Allocation: 47.89 MiB
Available: 39.20 GiB
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-在存储池中创建虚拟机存储卷创建卷">3. 在存储池中创建虚拟机存储卷（创建卷）&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh vol-create-as vmDiskPool linux_vm0.qcow2 300G --format qcow2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看存储卷&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ll /home/vmdisk/
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="存储池相关管理命令">存储池相关管理命令&lt;/h5>
&lt;p>删除存储池中的存储卷&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh vol-delete --pool vmDiskPool linux_vm1.qcow2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>取消激活存储池&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-destroy vmDiskPool&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>取消定义存储池&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-undefine vmDiskPool&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除存储池&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh pool-delete vmDiskPool&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-安装虚拟机">4. 安装虚拟机&lt;/h4>
&lt;p>bridge网络模式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virt-install \&lt;/span>
--virt-type kvm &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--os-type&lt;span class="o">=&lt;/span>linux &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--os-variant&lt;span class="o">=&lt;/span>RHEL7 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--name&lt;span class="o">=&lt;/span>vm0 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--memory &lt;span class="m">16384&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--vcpus &lt;span class="m">6&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--disk &lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>/home/vmdisk/linux_vm0.qcow2,format&lt;span class="o">=&lt;/span>qcow2,bus&lt;span class="o">=&lt;/span>virtio &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--location /root/CentOS-7-x86_64-Minimal-1708.iso &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--graphics none &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--network &lt;span class="nv">bridge&lt;/span>&lt;span class="o">=&lt;/span>br0,model&lt;span class="o">=&lt;/span>virtio &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--autostart &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--boot cdrom,hd,menu&lt;span class="o">=&lt;/span>on &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--console pty,target_type&lt;span class="o">=&lt;/span>serial &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--extra-args &lt;span class="s1">&amp;#39;console=ttyS0,115200n8 serial&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>--debug
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NAT网络模式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virt-install --name=test --ram 512 --vcpus=1 -f /data/kvm/vm/test.qcow2 --cdrom /data/iso/CentOS-6.5-x86_64-bin-DVD1.iso --graphics vnc,listen=0.0.0.0,port=5988, --network network=default,model=virtio --force --accelerate --autostart --boot cdrom,hd,menu=on&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装window主机&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virt-install --name=window_24 --ram 12288 --vcpus 4 -c /data/iso/windows2008.iso --disk path=/usr/share/virtio-win/virtio-win-1.5.2.iso,device=cdrom --disk path=/data/kvm/vm/window_24.img,format=qcow2,bus=virtio --network bridge=br0,model=virtio --vnc --vncport=5924 --vnclisten=0.0.0.0 --force --autostart --os-type=windows --accelerate --boot cdrom,hd,menu=on&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置虚拟机网络&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback"># vi /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=static
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.1.16
PREFIX=24
GATEWAY=192.168.1.1
DNS1=119.29.29.29
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-启动">5. 启动&lt;/h4>
&lt;p>使用virsh list &amp;ndash;all查看已安装的kvm&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="o">[&lt;/span>root@localhost ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># virsh list --all&lt;/span>
Id Name State
----------------------------------------------------
&lt;span class="m">5&lt;/span> &lt;span class="nb">test&lt;/span> running
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="6-动态调整cpu个数">6. 动态调整cpu个数&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh setvcpus test --maximum 4 --config #设置test的最大cpu颗数&lt;/span>
&lt;span class="c1"># virsh setvcpus test 3 #增加到3个CPU&lt;/span>
注：使用上面命令修改，虚拟机重启修改的配置会丢失
&lt;span class="c1"># virsh edit test #修改CPU个数再保存配置，这样重启之后也会生效&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="7-动态调整mem容量">7. 动态调整mem容量&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh setmaxmem test 2G --config #设置最大内存&lt;/span>
&lt;span class="c1"># virsh setmem test 800M --config #重启后生效&lt;/span>
&lt;span class="c1"># virsh setmem test 800M --config --live #马上生效&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="8-查看虚拟化客户机的资源使用情况">8. 查看虚拟化客户机的资源使用情况&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virt-top&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="9-一些扩展命令">9. 一些扩展命令&lt;/h4>
&lt;p>virsh命令行：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># virsh list #显示本地活动虚拟机&lt;/span>
&lt;span class="c1"># virsh list --all #显示本地所有的虚拟机（活动的+不活动的）&lt;/span>
&lt;span class="c1"># virsh define test.xml #通过配置文件定义一个虚拟机（这个虚拟机还不是活动的）&lt;/span>
&lt;span class="c1"># virsh start test #启动名字为test的非活动虚拟机&lt;/span>
&lt;span class="c1"># virsh create test.xml #创建虚拟机（创建后，虚拟机立即执行，成为活动主机）&lt;/span>
&lt;span class="c1"># virsh suspend test #暂停虚拟机&lt;/span>
&lt;span class="c1"># virsh resume test #启动暂停的虚拟机&lt;/span>
&lt;span class="c1"># virsh shutdown test #正常关闭虚拟机&lt;/span>
&lt;span class="c1"># virsh destroy test #强制关闭虚拟机&lt;/span>
&lt;span class="c1"># virsh undefine test #清除虚拟机&lt;/span>
&lt;span class="c1"># virsh dominfo test #显示虚拟机的基本信息&lt;/span>
&lt;span class="c1"># virsh domname 2 #显示id号为2的虚拟机名&lt;/span>
&lt;span class="c1"># virsh domid test #显示虚拟机id号&lt;/span>
&lt;span class="c1"># virsh domuuid test #显示虚拟机的uuid&lt;/span>
&lt;span class="c1"># virsh domstate test #显示虚拟机的当前状态&lt;/span>
&lt;span class="c1"># virsh dumpxml test #显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机分配id号、uuid、vnc端口号等等）&lt;/span>
&lt;span class="c1"># virsh setmem test 512000 #给不活动虚拟机设置内存大小&lt;/span>
&lt;span class="c1"># virsh setmaxmem test 1024000 #设定内存上限&lt;/span>
&lt;span class="c1"># virsh setvcpus test 4 #给不活动虚拟机设置cpu个数&lt;/span>
&lt;span class="c1"># virsh edit test #编辑配置文件（一般是在刚定义完虚拟机之后）&lt;/span>
&lt;span class="c1"># virsh vcpuinfo test #显示客户端的虚拟 CPU 信息。&lt;/span>
&lt;span class="c1"># virsh vcpupin test #控制客户端的虚拟 CPU 亲和性。&lt;/span>
&lt;span class="c1"># virsh domblkstat test #显示正在运行的客户端的块设备统计。&lt;/span>
&lt;span class="c1"># virsh domifstat test #显示正在运行的客户端的网络接口统计。&lt;/span>
&lt;span class="c1"># virsh attach-device test #使用 XML 文件中的设备定义在客户端中添加设备。&lt;/span>
&lt;span class="c1"># virsh attach-disk test #在客户端中附加新磁盘设备。&lt;/span>
&lt;span class="c1"># virsh attach-interface test #在客户端中附加新网络接口。&lt;/span>
&lt;span class="c1"># virsh detach-device test #从客户端中分离设备，使用同样的 XML 描述作为命令attach-device&lt;/span>
&lt;span class="c1"># virsh detach-disk test #从客户端中分离磁盘设备。&lt;/span>
&lt;span class="c1"># virsh detach-interface #从客户端中分离网络接口。&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>Could not open &amp;lsquo;/root/CentOS-7-x86_64-Minimal-1708.iso&amp;rsquo;: Permission denied&lt;/p>
&lt;/blockquote>
&lt;p>修改&lt;code>/etc/libvirt/qemu.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">#取消注释&lt;/span>
&lt;span class="nv">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;root&amp;#34;&lt;/span>
&lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;root&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启libvirtd&lt;/p>
&lt;p>&lt;code>service libvirtd restart&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>error: 操作失败: 这个域有活跃控制台会话&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ps -ef&lt;span class="p">|&lt;/span>grep &lt;span class="s1">&amp;#39;console VMNAME|grep -v &amp;#39;&lt;/span>grep&lt;span class="err">&amp;#39;&lt;/span>
&lt;span class="c1">#然后kill掉相应的进行&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>