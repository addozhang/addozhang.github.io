<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Backstage on 乱世浮生</title><link>https://atbug.com/tags/backstage/</link><description>Recent content in Backstage on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 28 Jan 2024 11:59:38 +0800</lastBuildDate><atom:link href="https://atbug.com/tags/backstage/index.xml" rel="self" type="application/rss+xml"/><item><title>初探 Backstage：快速上手指南</title><link>https://atbug.com/exploring-backstage-a-quick-start-guide/</link><pubDate>Sun, 28 Jan 2024 11:59:38 +0800</pubDate><guid>https://atbug.com/exploring-backstage-a-quick-start-guide/</guid><description>坦白说，虽然我之前阅读过相关文档，但实际上从未亲自尝试运行 Backstage。我一直有种感觉，Backstage 不过是一个开发者门户而非开发者平台。上周在 分享我对平台工程的理解 后，朋友圈中有人提议我写一篇关于 Backstage 入门的文章。这激起了我的好奇心，我决定深入探究一下 Backstage 究竟是什么。
Backstage 简介 Backstage 是一个用于构建开发人员门户的开放平台，统一了所有基础设施工具、服务和文档，以创建端到端的简化开发环境，由 Spotify 开源并捐赠给 CNCF。Backstage 提供了开箱即用的几个核心功能：
软件目录 软件目录（Software Catalog）是一个集中式系统，用于跟踪生态系统中所有软件（服务、网站、库、数据管道等）的所有权和元数据。开发人员提供软件的实体信息，Backstage 根据实体的信息与已有实体建立关联，并生成最终版本的软件实体保存在目录中。
从 Backstage 仓库的软件目录示例中可以找到 多种类型的实体定义。
软件模板 软件模板 （Software Template）是一个可以帮助开发在 Backstage 中创建组件的工具。默认情况下，它能够加载代码骨架、带有变量中的模板，然后将模板发布到某些位置，例如 GitHub 或 GitLab。
技术文档 技术文档（TechDocs） 是 Spotify 自行开发的直接内置于 Backstage 中的类文档代码解决方案。开发人员在与代码一起存在的 Markdown 文件中编写文档 - 只需很少的配置即可在 Backstage 中获得一个漂亮的文档站点。</description></item></channel></rss>