<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OrbStack on 乱世浮生</title><link>https://atbug.com/tags/orbstack/</link><description>Recent content in OrbStack on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 26 Apr 2024 17:34:42 +0800</lastBuildDate><atom:link href="https://atbug.com/tags/orbstack/index.xml" rel="self" type="application/rss+xml"/><item><title>曲线救国：通过 OrbStack 在 Apple Silicon 上搭建 K3s x86 集群</title><link>https://atbug.com/setup-k3s-x86-cluster-on-apple-silicon-with-orbstack/</link><pubDate>Fri, 26 Apr 2024 17:34:42 +0800</pubDate><guid>https://atbug.com/setup-k3s-x86-cluster-on-apple-silicon-with-orbstack/</guid><description>请原谅这个标题有点拗口。
如果你对 Apple Silicon、OrbStack、x86 架构或 K3s 集群中的任何一个概念不感兴趣，那么这篇文章可能不适合你。
背景 在我的工作流中，我依赖于 M1 MacBook Pro 和多个高效工具的结合。我使用 OrbStack 创建虚拟机，这个平台通过 Rosetta 进行二进制转换以实现虚拟化，不仅虚拟化速度快，还有其他众多优点（更多详情请见 OrbStack 优势）。同时，我偏爱使用 K3s 集群因为其轻量级特性，搭配先前介绍的 k3sup 工具，能够迅速搭建新的集群。
虽然这一系列工具的组合主打速度快和轻便，但当它们结合使用时，也会出现一些技术挑战。例如，在 OrbStack 创建的 x86 虚拟机上安装 K3s 时，我遇到了一个常见的问题，这个问题在社区中已经有了广泛的讨论并看似无解，具体可参见这个 GitHub 讨论。
Failed to create pod sandbox: rpc error: code = Unknown desc = failed to generate sanbdox container spec options: failed to generate seccomp spec opts: seccomp is not supported 在我的虚拟环境中，尽管使用 Docker 运行容器没有遇到问题，但在安装 K3s 时却遭遇挑战。值得注意的是，无论是 Docker 还是 K3s，它们都依赖于 Containerd 作为容器运行时。这一点让我怀疑问题可能出在 K3s 内置的 Containerd 配置上。</description></item></channel></rss>