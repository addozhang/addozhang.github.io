<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hystrix on 乱世浮生</title>
    <link>http://localhost:1313/tags/hystrix/</link>
    <description>Recent content in Hystrix on 乱世浮生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Jun 2018 16:20:16 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/hystrix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hystrix工作原理三</title>
      <link>http://localhost:1313/hystrix-exception-handling/</link>
      <pubDate>Sun, 24 Jun 2018 16:20:16 +0800</pubDate>
      
      <guid>http://localhost:1313/hystrix-exception-handling/</guid>
      <description>异常处理 Hystrix异常类型 HystrixRuntimeException HystrixBadRequestException HystrixTimeoutException RejectedExecutionException HystrixRuntimeException HystrixCommand失败时抛出, 不会触发fallback. HystrixBadRequestException 用提供的参数或状态表示错误的异常</description>
    </item>
    
    <item>
      <title>Hystrix工作原理二</title>
      <link>http://localhost:1313/hystrix-isolation/</link>
      <pubDate>Sun, 24 Jun 2018 16:18:52 +0800</pubDate>
      
      <guid>http://localhost:1313/hystrix-isolation/</guid>
      <description>隔离策略 线程和线程池 客户端(库, 网络调用等)在各自的线程上运行. 这种做法将他们与调用线程隔开, 因此调用者可以从一个耗时的依赖调用&amp;rdquo</description>
    </item>
    
    <item>
      <title>Hystrix工作原理一</title>
      <link>http://localhost:1313/how-hystrix-works/</link>
      <pubDate>Mon, 04 Jun 2018 08:47:40 +0800</pubDate>
      
      <guid>http://localhost:1313/how-hystrix-works/</guid>
      <description>运行时的流程图 构建HystrixCommand或者HystrixObservableCommand对象 第一步是构建一个HystrixComm</description>
    </item>
    
  </channel>
</rss>