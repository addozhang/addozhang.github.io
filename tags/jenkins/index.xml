<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins on 乱世浮生</title>
    <link>https://atbug.com/tags/jenkins/</link>
    <description>Recent content in Jenkins on 乱世浮生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 20 Apr 2018 12:18:46 +0000</lastBuildDate><atom:link href="https://atbug.com/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jenkins CI/CD (一) 基于角色的授权策略</title>
      <link>https://atbug.com/using-role-based-authorization-strategy-in-jenkins/</link>
      <pubDate>Fri, 20 Apr 2018 12:18:46 +0000</pubDate>
      
      <guid>https://atbug.com/using-role-based-authorization-strategy-in-jenkins/</guid>
      <description>&lt;p&gt;最近开始客串运维做CI/CD的规划设计, 主要是基于&amp;rsquo;Pipeline as Code in Jenkins&#39;. 整理了下思路和技术点, 慢慢的写.&lt;/p&gt;
&lt;p&gt;这一篇是关于基于角色的授权策略, 用的是&lt;code&gt;Role-Based Authorization Strategy Plugin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;授权在CI/CD流程中比较常见, 比如我们只让某些特定用户才可以构建Pre-Release的Job. 而更高级的Release发布, 又会需要某些用户的审批才可以进行. 需要授权时, 可能还需要发邮件提醒用户.&lt;/p&gt;
&lt;p&gt;UI上如何使用就不提了, 这里只说Pipeline as Code. 后面的几篇也会是这个背景.&lt;/p&gt;
&lt;p&gt;参考的这篇&lt;a href=&#34;https://www.avioconsulting.com/blog/using-role-based-authorization-strategy-jenkins&#34;&gt;文章&lt;/a&gt;, 文章里的代码运行失败, 做了修复.&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;安装完插件, 需要开始&lt;code&gt;基于角色的授权策略&lt;/code&gt;. 同时添加角色和为用户分配角色.&lt;/p&gt;
&lt;h3 id=&#34;使用role-based-strategy作为验证方式&#34;&gt;使用&lt;code&gt;Role-Based Strategy&lt;/code&gt;作为验证方式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Manage Jenkins / Configure Global Security / Configure Global Security&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://7xvxng.com1.z0.glb.clouddn.com/15241955282214.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>启用Jenkins CLI</title>
      <link>https://atbug.com/jenkins-cli-enable/</link>
      <pubDate>Mon, 09 Apr 2018 11:16:38 +0000</pubDate>
      
      <guid>https://atbug.com/jenkins-cli-enable/</guid>
      <description>Jenkins CLI提供了SSH和Client模式. Docker运行Jenkins version:&amp;#39;3&amp;#39;services:jenkins:image:jenkins/jenkins:alpineports:- 8080:8080- 50000:50000- 46059:46059volumes:- &amp;#34;/Users/addo/DevApps/Docker/data/jenkins:/var/jenkins_home&amp;#34;note: 以为是docker运行, ssh端口设置选用了固定端口. Client 从h</description>
    </item>
    
    <item>
      <title>Jenkins - 解决execute shell中启动的进程被在Job退出时被杀死问题</title>
      <link>https://atbug.com/resolve-process-be-killed-after-jenkins-job-done/</link>
      <pubDate>Thu, 15 Mar 2018 17:00:25 +0000</pubDate>
      
      <guid>https://atbug.com/resolve-process-be-killed-after-jenkins-job-done/</guid>
      <description>因为ProcessTreeKiller的存在, 构建过程中使用shell启动的进程在Job完成时都会被kill掉. 各种搜索以及ProcessT</description>
    </item>
    
  </channel>
</rss>
