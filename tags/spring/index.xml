<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 乱世浮生</title>
    <link>https://atbug.com/tags/spring/</link>
    <description>Recent content in Spring on 乱世浮生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 May 2020 22:04:02 +0800</lastBuildDate>
    
	<atom:link href="https://atbug.com/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eureka 实例注册状态保持 STARTING 的问题排查</title>
      <link>https://atbug.com/troubleshooting-on-eureka-instance-keep-starting/</link>
      <pubDate>Thu, 28 May 2020 22:04:02 +0800</pubDate>
      
      <guid>https://atbug.com/troubleshooting-on-eureka-instance-keep-starting/</guid>
      <description>这是真实发生在生产环境的 case，实例启动后正常运行，而在注册中心的状态一直保持STARTING，而本地的状态为UP。导致服务的消费方无法发</description>
    </item>
    
    <item>
      <title>Spring Cloud - Eureka服务注册</title>
      <link>https://atbug.com/spring-cloud-service-registry-via-eureka/</link>
      <pubDate>Wed, 14 Feb 2018 07:32:43 +0000</pubDate>
      
      <guid>https://atbug.com/spring-cloud-service-registry-via-eureka/</guid>
      <description>&lt;p&gt;之前分析过&lt;a href=&#34;http://atbug.com/spring-cloud-eureka-client-source-code-analysis/&#34;&gt;Spring Cloud的Eureka服务发现&lt;/a&gt;, 今天分析一下服务注册.&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;h3 id=&#34;bootstrapconfiguration&#34;&gt;BootstrapConfiguration&lt;/h3&gt;
&lt;h4 id=&#34;eurekadiscoveryclientconfigservicebootstrapconfiguration&#34;&gt;EurekaDiscoveryClientConfigServiceBootstrapConfiguration&lt;/h4&gt;
&lt;p&gt;spring-cloud-config环境中使用的配置&lt;/p&gt;
&lt;p&gt;引入&lt;code&gt;EurekaDiscoveryClientConfiguration&lt;/code&gt;和&lt;code&gt;EurekaClientAutoConfiguration&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;eurekadiscoveryclientconfiguration&#34;&gt;EurekaDiscoveryClientConfiguration&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;在spring-cloud中(通过是否存在RefreshScopeRefreshedEvent.class判断), 添加&lt;code&gt;RefreshScopeRefreshedEvent&lt;/code&gt;的listener. 收到事件后重新注册实例.&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;eureka.client.healthcheck.enabled&lt;/code&gt;设置为true时, 注册&lt;code&gt;EurekaHealthCheckHandler&lt;/code&gt;bean. &lt;code&gt;EurekaHealthCheckHandler&lt;/code&gt;负责将应用状态映射为实例状态&lt;code&gt;InstanceStatus&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;eurekaclientautoconfiguration&#34;&gt;EurekaClientAutoConfiguration&lt;/h5&gt;
&lt;p&gt;支持spring-cloud和非spring-cloud环境, 在spring-cloud环境中, 下面两个bean要使用&lt;code&gt;@RefreshScope&lt;/code&gt;标注&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实例化&lt;code&gt;EurekaClient&lt;/code&gt;bean, 在spring-cloud中使用实现类&lt;code&gt;CloudEurekaClient&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;EurekaInstanceConfig&lt;/code&gt;实例, 实例化&lt;code&gt;ApplicationInfoManager&lt;/code&gt;bean&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>ConfigurationProperties到底需不需要getter</title>
      <link>https://atbug.com/configurationproperties-requires-getter-or-not/</link>
      <pubDate>Wed, 07 Feb 2018 15:53:21 +0000</pubDate>
      
      <guid>https://atbug.com/configurationproperties-requires-getter-or-not/</guid>
      <description>为什么要讨论这个问题, 工作中一个同事写的类使用了ConfigurationProperties, 只提供了标准的setter方法. 属性的访问,</description>
    </item>
    
    <item>
      <title>SpringBoot源码 - 启动</title>
      <link>https://atbug.com/glance-over-spring-boot-source/</link>
      <pubDate>Fri, 08 Dec 2017 17:48:43 +0000</pubDate>
      
      <guid>https://atbug.com/glance-over-spring-boot-source/</guid>
      <description>SpringBoot Application启动部分的源码阅读. SpringApplication 常用的SpringApplication.run(Class, Args)启动Spring应用,</description>
    </item>
    
    <item>
      <title>使用Kryo替换spring amqp的Java序列化</title>
      <link>https://atbug.com/use-kryo-in-spring-amqp-serialization/</link>
      <pubDate>Wed, 29 Jun 2016 05:29:14 +0000</pubDate>
      
      <guid>https://atbug.com/use-kryo-in-spring-amqp-serialization/</guid>
      <description>spring amqp的原生并没有对Kryo加以支持，Kryo的优点就不多说了。 git地址：https://github.com/addozhang/s</description>
    </item>
    
  </channel>
</rss>