<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具 on 乱世浮生</title><link>https://atbug.com/categories/%E5%B7%A5%E5%85%B7/</link><description>Recent content in 工具 on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 26 Dec 2021 12:31:16 +0800</lastBuildDate><atom:link href="https://atbug.com/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Colima：MacOS 上的极简容器运行时和 Kubernetes（支持 m1）</title><link>https://atbug.com/containers-runtime-on-macos-with-colima/</link><pubDate>Sun, 26 Dec 2021 12:31:16 +0800</pubDate><guid>https://atbug.com/containers-runtime-on-macos-with-colima/</guid><description>
&lt;p>&lt;a href="https://github.com/abiosoft/colima">Colima&lt;/a> 是一个以最小化设置来在MacOS上运行容器运行时和 Kubernetes 的工具。支持 m1（文末讨论），同样也支持 Linux。&lt;/p>
&lt;p>Colima 的名字取自 Container on Lima。&lt;a href="https://github.com/lima-vm/lima">Lima&lt;/a> 是一个虚拟机工具，可以实现自动的文件共享、端口转发以及 containerd。&lt;/p>
&lt;p>Colima 实际上是通过 Lima 启动了名为 &lt;code>colima&lt;/code> 的虚拟机，使用虚拟机中的 containerd 作为容器运行时。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/12/26/colima.gif" alt="colima">&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>Colima 的使用很简单，执行下面的命令就可以创建虚拟机，默认是 Docker 的运行时。&lt;/p>
&lt;p>初次运行需要下载虚拟机镜像创建虚拟机，耗时因网络情况有所差异。之后，启动虚拟机就只需要 30s 左右的时间。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">colima start
INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> starting colima
INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> creating and starting ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>vm
INFO&lt;span class="o">[&lt;/span>0119&lt;span class="o">]&lt;/span> provisioning ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>docker
INFO&lt;span class="o">[&lt;/span>0119&lt;span class="o">]&lt;/span> provisioning in VM ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>docker
INFO&lt;span class="o">[&lt;/span>0133&lt;span class="o">]&lt;/span> restarting VM to &lt;span class="nb">complete&lt;/span> setup ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>docker
INFO&lt;span class="o">[&lt;/span>0133&lt;span class="o">]&lt;/span> stopping ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>vm
INFO&lt;span class="o">[&lt;/span>0136&lt;span class="o">]&lt;/span> starting ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>vm
INFO&lt;span class="o">[&lt;/span>0158&lt;span class="o">]&lt;/span> starting ... &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>docker
INFO&lt;span class="o">[&lt;/span>0159&lt;span class="o">]&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时，在宿主机上就可以使用 Docker 相关的命令了：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
docker pull busybox
docker images
REPOSITORY TAG IMAGE ID CREATED SIZE
busybox latest b34806a1af7a &lt;span class="m">2&lt;/span> weeks ago 1.41MB
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以使用 Lima 的命令行 &lt;code>limact&lt;/code>工具查看虚拟机的情况：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">limactl list
NAME STATUS SSH ARCH CPUS MEMORY DISK DIR
colima Running 127.0.0.1:64505 aarch64 &lt;span class="m">2&lt;/span> 2GiB 60GiB /Users/addo/.lima/colima
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看操作系统信息：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">uname -a
Darwin Addos-Macbook-Pro.local 21.2.0 Darwin Kernel Version 21.2.0: Sun Nov &lt;span class="m">28&lt;/span> 20:28:41 PST 2021&lt;span class="p">;&lt;/span> root:xnu-8019.61.5~1/RELEASE_ARM64_T6000 arm64
limactl shell colima uname -a
Linux lima-colima 5.13.0-22-generic &lt;span class="c1">#22-Ubuntu SMP Fri Nov 5 13:22:27 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者使用 Colima 的 &lt;code>ssh&lt;/code> 命令进入虚拟机：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># on host&lt;/span>
colima ssh
&lt;span class="c1"># in vm&lt;/span>
uname -a
Linux lima-colima 5.13.0-22-generic &lt;span class="c1">#22-Ubuntu SMP Fri Nov 5 13:22:27 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="其他运行时">其他运行时&lt;/h3>
&lt;p>也可以在创建的时候通过 &lt;code>--runtime containerd&lt;/code> 参数指定使用 Containerd 作为运行时。此时就需要使用 &lt;code>colima nerdctl&lt;/code> 来使用 &lt;code>nerdctl&lt;/code> 与 Containerd 进行交互。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">colima start --runtime containerd
&lt;/code>&lt;/pre>&lt;/div>&lt;p>同样，还可以创建一个 k3s 作为 Kubernetes 运行时：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">colima start --with-kubernetes
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>我们尝试启动一个 nginx 容器：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --rm -d --name nginx -p 8080:80 nginx:latest
docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
20d6c56e038b nginx:latest &lt;span class="s2">&amp;#34;/docker-entrypoint.…&amp;#34;&lt;/span> &lt;span class="m">9&lt;/span> seconds ago Up &lt;span class="m">8&lt;/span> seconds 0.0.0.0:8080-&amp;gt;80/tcp, :::8080-&amp;gt;80/tcp nginx
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Colima 会自动配置端口转发：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">curl -I http://localhost:8080
HTTP/1.1 &lt;span class="m">200&lt;/span> OK
Server: nginx/1.21.4
Date: Sun, &lt;span class="m">26&lt;/span> Dec &lt;span class="m">2021&lt;/span> 04:17:22 GMT
Content-Type: text/html
Content-Length: &lt;span class="m">615&lt;/span>
Last-Modified: Tue, &lt;span class="m">02&lt;/span> Nov &lt;span class="m">2021&lt;/span> 14:49:22 GMT
Connection: keep-alive
ETag: &lt;span class="s2">&amp;#34;61814ff2-267&amp;#34;&lt;/span>
Accept-Ranges: bytes
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="虚拟机配置">虚拟机配置&lt;/h2>
&lt;p>Colima 启动的虚拟机默认是 2CPU、2GiB 内存 和 60GiB 存储。可以在创建时通过 &lt;code>--cpu&lt;/code> 、&lt;code>--memory&lt;/code> 和 &lt;code>--disk&lt;/code> 来分配更多资源。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">colima start --cpu &lt;span class="m">4&lt;/span> --memory &lt;span class="m">16&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以修改当前虚拟机的配置：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">colima stop
colima start --cpu &lt;span class="m">4&lt;/span> --memory &lt;span class="m">16&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="同类工具比较">同类工具比较&lt;/h2>
&lt;p>其实有不少类似的工具，比如 kind、k3d 和 minikube 三种都是用来创建 Kubernetes 环境。我个人此前用的 k3d 就比较多。&lt;/p>
&lt;p>对于 Docker 容器环境，这三个其实都没有提供。minikube 的虚拟机中也有容器运行时，但是无法单纯安装 Docker 环境。&lt;/p>
&lt;p>对于 Kubernetes 环境来说，这几种都适合，相比 Colima 来说还支持创建多个集群（当前 Colima 最新版本是 0.2.2，多集群的支持也在开发中。估计 0.3.0 会提供，毕竟创建多个虚拟机就能实现）。但使用 Colima 的话，Kubernetes 和 Docker 可以共享镜像（本地镜像）和运行时。&lt;/p>
&lt;h2 id="不足">不足&lt;/h2>
&lt;h3 id="多集群的支持">多集群的支持&lt;/h3>
&lt;p>前面提到，目前还不支持创建多个 Kubernetes 集群，估计 0.3.0 会提供。&lt;/p>
&lt;h3 id="m1-的支持">m1 的支持&lt;/h3>
&lt;p>这里还是要说下 m1，我现在主要用 m1 的电脑，本地的容器运行时用的 Docker Desktop。&lt;/p>
&lt;p>前面我们有留意到虚拟机使用的是 &lt;code>aarch64&lt;/code> 架构系统，&lt;strong>对于某些不支持 arm64 的镜像还是无法运行&lt;/strong>。毕竟 Lima 是原生支持 m1，而不是使用 Rosetta 转译的 Docker Desktop。&lt;/p>
&lt;p>有兴趣的同学可以尝试用 Rosetta 转译 Lima。&lt;/p></description></item><item><title>常用的几款工具让 Kubernetes 集群上的工作更容易</title><link>https://atbug.com/tools-accelerate-work-on-kubernetes-cluster/</link><pubDate>Sat, 26 Jun 2021 12:16:28 +0800</pubDate><guid>https://atbug.com/tools-accelerate-work-on-kubernetes-cluster/</guid><description>
&lt;p>之前写过一篇 &lt;a href="https://mp.weixin.qq.com/s/CXJ1zUoktdI3c3CHVju0gA">介绍了工具加速云原生 Java 开发&lt;/a>。&lt;/p>
&lt;p>其实日常工作中在集群上的操作也非常多，今天就来介绍我所使用的工具。&lt;/p>
&lt;h2 id="kubectl-alias">kubectl-alias&lt;/h2>
&lt;p>使用频率最高的工具，我自己稍微修改了一下，加入了 &lt;code>StatefulSet&lt;/code> 的支持。&lt;/p>
&lt;p>这个是我的 &lt;a href="https://github.com/addozhang/kubectl-aliases">https://github.com/addozhang/kubectl-aliases&lt;/a>，基于 &lt;a href="https://github.com/ahmetb/kubectl-aliases">https://github.com/ahmetb/kubectl-aliases&lt;/a>。&lt;/p>
&lt;p>比如输出某个 pod 的 json，&lt;code>kgpoojson xxx&lt;/code> 等同于 &lt;code>kubectl get pod xxx -o json&lt;/code>。&lt;/p>
&lt;p>结合 &lt;a href="https://stedolan.github.io/jq/">jq&lt;/a> 使用效果更好 😂。&lt;/p>
&lt;h3 id="语法解读">语法解读&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;code>k&lt;/code>&lt;/strong>=&lt;code>kubectl&lt;/code>
&lt;ul>
&lt;li>&lt;strong>&lt;code>sys&lt;/code>&lt;/strong>=&lt;code>--namespace kube-system&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>commands:
&lt;ul>
&lt;li>&lt;strong>&lt;code>g&lt;/code>&lt;/strong>=&lt;code>get&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>d&lt;/code>&lt;/strong>=&lt;code>describe&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>rm&lt;/code>&lt;/strong>=&lt;code>delete&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>a&lt;/code>&lt;/strong>:&lt;code>apply -f&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>ak&lt;/code>&lt;/strong>:&lt;code>apply -k&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>k&lt;/code>&lt;/strong>:&lt;code>kustomize&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>ex&lt;/code>&lt;/strong>: &lt;code>exec -i -t&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>lo&lt;/code>&lt;/strong>: &lt;code>logs -f&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>resources:
&lt;ul>
&lt;li>&lt;strong>&lt;code>po&lt;/code>&lt;/strong>=pod, &lt;strong>&lt;code>dep&lt;/code>&lt;/strong>=&lt;code>deployment&lt;/code>, &lt;strong>&lt;code>ing&lt;/code>&lt;/strong>=&lt;code>ingress&lt;/code>, &lt;strong>&lt;code>svc&lt;/code>&lt;/strong>=&lt;code>service&lt;/code>, &lt;strong>&lt;code>cm&lt;/code>&lt;/strong>=&lt;code>configmap&lt;/code>, &lt;strong>&lt;code>sec&lt;/code>=&lt;code>secret&lt;/code>&lt;/strong>,&lt;strong>&lt;code>ns&lt;/code>&lt;/strong>=&lt;code>namespace&lt;/code>, &lt;strong>&lt;code>no&lt;/code>&lt;/strong>=&lt;code>node&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>flags:
&lt;ul>
&lt;li>output format: &lt;strong>&lt;code>oyaml&lt;/code>&lt;/strong>, &lt;strong>&lt;code>ojson&lt;/code>&lt;/strong>, &lt;strong>&lt;code>owide&lt;/code>&lt;/strong>&lt;/li>
&lt;li>&lt;strong>&lt;code>all&lt;/code>&lt;/strong>: &lt;code>--all&lt;/code> or &lt;code>--all-namespaces&lt;/code> depending on the command&lt;/li>
&lt;li>&lt;strong>&lt;code>sl&lt;/code>&lt;/strong>: &lt;code>--show-labels&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>w&lt;/code>&lt;/strong>=&lt;code>-w/--watch&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>value flags (should be at the end):
&lt;ul>
&lt;li>&lt;strong>&lt;code>n&lt;/code>&lt;/strong>=&lt;code>-n/--namespace&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>f&lt;/code>&lt;/strong>=&lt;code>-f/--filename&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>l&lt;/code>&lt;/strong>=&lt;code>-l/--selector&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubectx--kubens">kubectx + kubens&lt;/h2>
&lt;p>&lt;a href="https://github.com/ahmetb/kubectx#installation">安装看这里&lt;/a>&lt;/p>
&lt;p>&lt;code>kubectx&lt;/code> 用于在不同的集群间进行快速切换。假如用 &lt;code>kubectl&lt;/code>，你需要：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># context 列表&lt;/span>
kubectl config current-context
&lt;span class="c1"># 设置 context&lt;/span>
kubectl config use-context coffee
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/kubectxdemo.gif" alt="kubectx-demo">&lt;/p>
&lt;p>&lt;code>kubens&lt;/code> 就是在不同 namespace 间快速切换的工具。用 &lt;code>kubectl&lt;/code> 的话，需要：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># namespace 列表&lt;/span>
kbuectl get ns
&lt;span class="c1"># kubectl config set-context --current --namespace=kube-system&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/kubensdemo.gif" alt="kubens-demo">&lt;/p>
&lt;h2 id="k9s">k9s&lt;/h2>
&lt;p>没错，只比 k8s 多了个 1 😂。&lt;/p>
&lt;p>&lt;a href="https://github.com/derailed/k9s">k9s&lt;/a> 提供了终端 UI 与 Kubernetes 集群进行编辑交互。本人常用的比如：&lt;/p>
&lt;ul>
&lt;li>&lt;code>F&lt;/code> 配置端口转发&lt;/li>
&lt;li>&lt;code>l&lt;/code> 输出 pod 日志&lt;/li>
&lt;li>&lt;code>e&lt;/code> 修改资源对象&lt;/li>
&lt;li>&lt;code>s&lt;/code> pod 终端交互模式&lt;/li>
&lt;li>&lt;code>y&lt;/code> yaml 方式输出资源对象&lt;/li>
&lt;li>&lt;code>d&lt;/code> describe 资源对象&lt;/li>
&lt;li>&lt;code>ctrl+d&lt;/code> 删除 pod&lt;/li>
&lt;/ul>
&lt;p>启动方式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 指定 namespace 运行&lt;/span>
k9s -n mycoolns
&lt;span class="c1"># 指定 context 运行&lt;/span>
k9s --context coolCtx
&lt;span class="c1"># 只读模式运行&lt;/span>
k9s --readonly
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/20210626102731.png" alt="k9s-pod">&lt;/p>
&lt;p>键入问号“?” 就可以打开快捷操作指引。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/20210626103012.png" alt="help">&lt;/p>
&lt;h2 id="stern">stern&lt;/h2>
&lt;p>&lt;a href="https://github.com/wercker/stern">stern&lt;/a> 可以用来 &lt;code>tail&lt;/code> 集群上的多个 pod 和 pod 中多个容器的日志。不同的 pod 和容器以不同的颜色区分，方便 debug。&lt;/p>
&lt;p>比如使用命令 &lt;code>stern -l tier=control-plane -n kube-system&lt;/code> 可以输出 &lt;code>kube-system&lt;/code> 命名空间下控制平面（&lt;code>label&lt;/code> 为 &lt;code>tier=control-plane&lt;/code>） pod 的日志。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/20210626104458.png" alt="stern-control-plane">&lt;/p>
&lt;p>命令行选项&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">Tail multiple pods and containers from Kubernetes
Usage:
stern pod-query &lt;span class="o">[&lt;/span>flags&lt;span class="o">]&lt;/span>
Flags:
-A, --all-namespaces If present, tail across all namespaces. A specific namespace is ignored even &lt;span class="k">if&lt;/span> specified with --namespace.
--color string Color output. Can be &lt;span class="s1">&amp;#39;always&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;never&amp;#39;&lt;/span>, or &lt;span class="s1">&amp;#39;auto&amp;#39;&lt;/span> &lt;span class="o">(&lt;/span>default &lt;span class="s2">&amp;#34;auto&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
--completion string Outputs stern command-line completion code &lt;span class="k">for&lt;/span> the specified shell. Can be &lt;span class="s1">&amp;#39;bash&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;zsh&amp;#39;&lt;/span>
-c, --container string Container name when multiple containers in pod &lt;span class="o">(&lt;/span>default &lt;span class="s2">&amp;#34;.*&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
--container-state string If present, tail containers with status in running, waiting or terminated. Default to running. &lt;span class="o">(&lt;/span>default &lt;span class="s2">&amp;#34;running&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
--context string Kubernetes context to use. Default to current context configured in kubeconfig.
-e, --exclude strings Regex of log lines to exclude
-E, --exclude-container string Exclude a Container name
--field-selector string Selector &lt;span class="o">(&lt;/span>field query&lt;span class="o">)&lt;/span> to filter on. If present, default to &lt;span class="s2">&amp;#34;.*&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> the pod-query.
-h, --help &lt;span class="nb">help&lt;/span> &lt;span class="k">for&lt;/span> stern
-i, --include strings Regex of log lines to include
--init-containers Include or exclude init containers &lt;span class="o">(&lt;/span>default &lt;span class="nb">true&lt;/span>&lt;span class="o">)&lt;/span>
--kubeconfig string Path to kubeconfig file to use
-n, --namespace strings Kubernetes namespace to use. Default to namespace configured in Kubernetes context. To specify multiple namespaces, repeat this or &lt;span class="nb">set&lt;/span> comma-separated value.
-o, --output string Specify predefined template. Currently support: &lt;span class="o">[&lt;/span>default, raw, json&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>default &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
-l, --selector string Selector &lt;span class="o">(&lt;/span>label query&lt;span class="o">)&lt;/span> to filter on. If present, default to &lt;span class="s2">&amp;#34;.*&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> the pod-query.
-s, --since duration Return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to 48h.
--tail int The number of lines from the end of the logs to show. Defaults to -1, showing all logs. &lt;span class="o">(&lt;/span>default -1&lt;span class="o">)&lt;/span>
--template string Template to use &lt;span class="k">for&lt;/span> log lines, leave empty to use --output flag
-t, --timestamps Print timestamps
--timezone string Set timestamps to specific timezone &lt;span class="o">(&lt;/span>default &lt;span class="s2">&amp;#34;Local&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
-v, --version Print the version and &lt;span class="nb">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lens">Lens&lt;/h2>
&lt;p>&lt;a href="https://k8slens.dev/">Lens&lt;/a> 是用来控制 Kubernetes 的 IDE，开源且免费。&lt;/p>
&lt;p>消除了集群操作的复杂性、提供了实时的可观察性、方便故障排查、支持多系统的桌面客户端、兼容多种集群。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/20210626113853.png" alt="Lens">&lt;/p>
&lt;h2 id="infra-app">Infra App&lt;/h2>
&lt;p>&lt;a href="https://infra.app/">Infra App&lt;/a> 跟 Lens 差不多，UI 较 Lens 好些，但是功能就弱很多，类似 Lens 的只读模式。&lt;/p>
&lt;p>免费版比收费版的区别只在于支持的集群数量，免费版只支持一个集群。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/20210626114417.png" alt="Infra">&lt;/p>
&lt;h2 id="kubefwd">kubefwd&lt;/h2>
&lt;p>&lt;a href="https://github.com/txn2/kubefwd">kubefwd&lt;/a>，这个一直有安装但是使用次数寥寥，因为应用之间的访问没有走 service，不过偶尔做些实验的时候会用的上。&lt;/p>
&lt;blockquote>
&lt;p>kubefwd 是一个用于端口转发Kubernetes中指定namespace下的全部或者部分pod的命令行工具。 kubefwd 使用本地的环回IP地址转发需要访问的service，并且使用与service相同的端口。 kubefwd 会临时将service的域条目添加到 /etc/hosts 文件中。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>启动kubefwd后，在本地就能像在Kubernetes集群中一样使用service名字与端口访问对应的应用程序。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/kubefwdani.gif" alt="kubefwd_ani">&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/26/16246803227515.jpg" alt="">&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>善用工具可以提升效率，但并不是不可或缺的。&lt;/p>
&lt;p>如果你有其他的工具，欢迎留言提出。&lt;/p></description></item><item><title>开箱即用的 Prometheus 告警规则集</title><link>https://atbug.com/introduction-awesome-prometheus-alerts/</link><pubDate>Thu, 13 May 2021 08:01:00 +0800</pubDate><guid>https://atbug.com/introduction-awesome-prometheus-alerts/</guid><description>
&lt;p>在配置系统监控的时候，是不是即使绞尽脑汁监控的也还是不够全面，或者不知如何获取想要的指标。&lt;/p>
&lt;p>&lt;a href="https://awesome-prometheus-alerts.grep.to/">Awesome Prometheus alerts&lt;/a> 维护了一套开箱即用的 Prometheus 告警规则集合，有 300 多个告警规则。同时，还是说明如何获取对应的指标。这些规则，对每个 Prometheus 都是通用的。&lt;/p>
&lt;p>涉及如主机、硬件、容器等基础资源，到数据库、消息代理、运行时、反向代理、负责均衡器，运行时、服务编排，甚至是网络层面和 Prometheus 自身和集群。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/05/13/alertrulescover.png" alt="alert_rules">&lt;/p>
&lt;p>Prometheus 的安装和配置不做赘述，配置可以看&lt;a href="https://awesome-prometheus-alerts.grep.to/alertmanager">这里&lt;/a>。下面简单看下几个常用规则&lt;/p>
&lt;h3 id="主机和硬件资源">主机和硬件资源&lt;/h3>
&lt;p>主机和硬件资源的告警依赖 &lt;a href="https://github.com/prometheus/node_exporter">node-exporter&lt;/a> 输出的指标。例如：&lt;/p>
&lt;h4 id="内存不足">内存不足&lt;/h4>
&lt;p>可用内存低于阈值 &lt;code>10%&lt;/code> 就会触发告警。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HostOutOfMemory&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 &amp;lt; 10&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Host out of memory (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Node memory is filling up (&amp;lt; 10% left)\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="主机异常的网络吞吐">主机异常的网络吞吐&lt;/h5>
&lt;p>最近两分钟入站的流量超过 &lt;code>100m&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>rate&lt;/code> 语法见&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/functions/#rate">这里&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HostUnusualNetworkThroughputIn&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 &amp;gt; 100&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">5m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Host unusual network throughput in (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Host network interfaces are probably receiving too much data (&amp;gt; 100 MB/s)\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mysql">Mysql&lt;/h3>
&lt;p>Mysql 的告警依赖 &lt;a href="https://github.com/prometheus/mysqld_exporter">prometheus/mysqld_exporter&lt;/a> 输出的指标。&lt;/p>
&lt;h4 id="连接数过多">连接数过多&lt;/h4>
&lt;p>Mysql 实例的连接数最近一分钟的连接数超过最大值的 &lt;code>80%&lt;/code> 触发告警&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">MysqlTooManyConnections(&amp;gt;80%)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">avg by (instance) (rate(mysql_global_status_threads_connected[1m])) / avg by (instance) (mysql_global_variables_max_connections) * 100 &amp;gt; 80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">MySQL too many connections (&amp;gt; 80%) (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;More than 80% of MySQL connections are in use on {{ $labels.instance }}\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="慢查询">慢查询&lt;/h4>
&lt;p>最近一分钟慢查询数量大于 0 时触发。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">MysqlSlowQueries&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">increase(mysql_global_status_slow_queries[1m]) &amp;gt; 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">MySQL slow queries (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;MySQL server mysql has some new slow query.\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="运行时-jvm">运行时 JVM&lt;/h3>
&lt;p>JVM 的运行时告警，居然只有可怜巴巴的一个。堆空间占用超过 &lt;code>80%&lt;/code> 触发告警。&lt;/p>
&lt;p>依赖 &lt;a href="https://github.com/prometheus/client_java">java-client&lt;/a> 输出的指标。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">JvmMemoryFillingUp&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">(sum by (instance)(jvm_memory_used_bytes{area=&amp;#34;heap&amp;#34;}) / sum by (instance)(jvm_memory_max_bytes{area=&amp;#34;heap&amp;#34;})) * 100 &amp;gt; 80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">JVM memory filling up (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;JVM memory is filling up (&amp;gt; 80%)\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="kubernetes">Kubernetes&lt;/h3>
&lt;p>Kubernetes 相关的告警规则有 33 个，比较丰富。&lt;/p>
&lt;p>摘个比较常见的：容器OOM告警。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">KubernetesContainerOomKiller&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">(kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m &amp;gt;= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason=&amp;#34;OOMKilled&amp;#34;}[10m]) == 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">0m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Kubernetes container oom killer (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ssl-证书过期">SSL 证书过期&lt;/h3>
&lt;p>通过 &lt;a href="https://github.com/ribbybibby/ssl_exporter">&lt;/a> 输出的指标，可以监控证书过期：未来 &lt;code>7 天&lt;/code> 有证书过期便会触发告警。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">alert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">SslCertificateExpiry(&amp;lt;7Days)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">expr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ssl_verified_cert_not_after{chain_no=&amp;#34;0&amp;#34;} - time() &amp;lt; 86400 * 7&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">for&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">0m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">severity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">SSL certificate expiry (&amp;lt; 7 days) (instance {{ $labels.instance }})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ $labels.instance }} Certificate is expiring in 7 days\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>今天列出来的也仅仅是冰山一角，而且用户也可以&lt;a href="https://github.com/samber/awesome-prometheus-alerts#-contributing">贡献&lt;/a>出更多的规则。&lt;/p></description></item></channel></rss>