<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envoy on 乱世浮生</title><link>https://atbug.com/categories/envoy/</link><description>Recent content in Envoy on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 08 Dec 2020 20:53:39 +0800</lastBuildDate><atom:link href="https://atbug.com/categories/envoy/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 cLion 阅读 envoy 源码</title><link>https://atbug.com/read-envoy-source-code-in-clion/</link><pubDate>Tue, 08 Dec 2020 20:53:39 +0800</pubDate><guid>https://atbug.com/read-envoy-source-code-in-clion/</guid><description>
&lt;p>虽然不写 C++，但是看点代码还是能看懂。Envoy 的功能配置复杂，有时候处理问题还是需要看下源码的。&lt;/p>
&lt;p>Vim 或者 Code 就算了，我只是阅读源码需要关联跳转就行。在 Clion 中，代码的关联跳转需要一个CMakeLists.txt 文件。&lt;/p>
&lt;p>我将生成的内容挂在了 &lt;a href="https://gist.github.com/addozhang/82b172a4276acd073329e5deab272f18">gist&lt;/a> 上了，不想花费时间生成的可以直接复制。&lt;/p>
&lt;h2 id="准备环境">准备环境&lt;/h2>
&lt;h3 id="1-安装依赖的工具">1. 安装依赖的工具&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">brew install coreutils wget cmake libtool go automake ninja clang-format
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-bazel">2. bazel&lt;/h3>
&lt;p>使用 homebrew 进行安装： &lt;code>brew install bazel&lt;/code> 即可&lt;/p>
&lt;p>安装问运行编译测试下：&lt;code>bazel build //source/exe:envoy-static&lt;/code>，提示版本太高。&lt;/p>
&lt;p>现在 homebrew 安装的版本是&lt;code>3.7.1&lt;/code>，而 envoy 需要&lt;code>3.4.1&lt;/code>。&lt;/p>
&lt;p>按照提示下载&lt;code>3.4.1&lt;/code>的版本：&lt;code>cd &amp;quot;/usr/local/Cellar/bazel/3.7.1/libexec/bin&amp;quot; &amp;amp;&amp;amp; curl -fLO https://releases.bazel.build/3.4.1/release/bazel-3.4.1-darwin-x86_64 &amp;amp;&amp;amp; chmod +x bazel-3.4.1-darwin-x86_64&lt;/code>，然后 &lt;em>进到目录里进行下替换&lt;/em> 。&lt;/p>
&lt;p>&lt;strong>注意：编译耗时很长，吃 cpu。&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">INFO: Elapsed time: 1844.351s, Critical Path: 336.48s
INFO: &lt;span class="m">4918&lt;/span> processes: &lt;span class="m">4918&lt;/span> darwin-sandbox.
INFO: Build completed successfully, &lt;span class="m">6088&lt;/span> total actions
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2020/12/08/16074319425868.jpg" alt="">&lt;/p>
&lt;h3 id="3-生成cmakeliststxt文件">3. 生成&lt;code>CMakeLists.txt&lt;/code>文件&lt;/h3>
&lt;p>这就是为什么上面需要安装编译工具了，clone &lt;code>git@github.com:lizan/bazel-cmakelists.git&lt;/code> 这个仓库。&lt;/p>
&lt;p>只要&lt;code>bazel&lt;/code>编译能通过，就可以使用这个工具生成文件了。&lt;/p>
&lt;p>在 envoy 源码根目录执行命令：&lt;code>/path_to_bazel-cmakelists/bazel-cmakelists //source/exe:envoy-static&lt;/code>。&lt;/p>
&lt;p>执行结果：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">CMakeLists.txt generated in following directory:
/Users/addo/Workspaces/github_w/envoyproxy/envoy
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-clion-刷新">4. Clion 刷新&lt;/h3>
&lt;p>Clion 检测到 CMakeLists.txt 之后就会自动刷新 workspace，自此就可以在 Clion 中愉快的阅读源码了。&lt;/p></description></item></channel></rss>