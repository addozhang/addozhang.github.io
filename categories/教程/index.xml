<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>教程 on 乱世浮生</title><link>https://atbug.com/categories/%E6%95%99%E7%A8%8B/</link><description>Recent content in 教程 on 乱世浮生</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 23 Jun 2021 00:43:39 +0800</lastBuildDate><atom:link href="https://atbug.com/categories/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>启动与 web 控制台的使用</title><link>https://atbug.com/pipy-console-introduction/</link><pubDate>Wed, 23 Jun 2021 00:43:39 +0800</pubDate><guid>https://atbug.com/pipy-console-introduction/</guid><description>
&lt;h2 id="启动">启动&lt;/h2>
&lt;p>Pipy 编译之后的 &lt;code>bin&lt;/code> 目录中只有一个 11 Mb 大小的可执行文件。&lt;/p>
&lt;p>启动也很简单，只需要指定 javascript 脚本文件即可：&lt;code>bin/pipy path_to_js_file&lt;/code>。&lt;/p>
&lt;p>比如：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ cat &amp;gt; /tmp/pipy.js &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span class="s">pipy()
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">.listen(6080)
&lt;/span>&lt;span class="s"> .decodeHttpRequest()
&lt;/span>&lt;span class="s"> .replaceMessage(
&lt;/span>&lt;span class="s"> new Message(&amp;#39;Hello!\n&amp;#39;)
&lt;/span>&lt;span class="s"> )
&lt;/span>&lt;span class="s"> .encodeHttpResponse()
&lt;/span>&lt;span class="s">EOF&lt;/span>
$ bin/pipy /tmp/pipy.js
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> Module /pipy.js
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="o">===============&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>Listen on 0.0.0.0:6080&lt;span class="o">]&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> -----&amp;gt;&lt;span class="p">|&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="p">|&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> decodeHttpRequest
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> replaceMessage
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> encodeHttpResponse
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="p">|&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &amp;lt;-----&lt;span class="p">|&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:01:29 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>listener&lt;span class="o">]&lt;/span> Listening on 0.0.0.0:6080
&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行完上面两条命令，即可监听本地的 &lt;code>6080&lt;/code> 端口，尝试发起一个请求：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">curl http://127.0.0.1:6080
Hello!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>此外，可以通过指定 &lt;code>-h&lt;/code> 选项，可以查看 Pipy 的帮助信息。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ bin/pipy -h
Usage: pipy &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span> &amp;lt;script filename&amp;gt;
Options:
-h, -help, --help Show &lt;span class="nb">help&lt;/span> information
-v, -version, --version Show version information
--list-filters List all filters
--help-filters Show detailed usage information &lt;span class="k">for&lt;/span> all filters
--log-level&lt;span class="o">=&lt;/span>&amp;lt;debug&lt;span class="p">|&lt;/span>info&lt;span class="p">|&lt;/span>warn&lt;span class="p">|&lt;/span>error&amp;gt; Set the level of log output
--verify Verify configuration only
--reuse-port Enable kernel load balancing &lt;span class="k">for&lt;/span> all listening ports
--gui-port&lt;span class="o">=&lt;/span>&amp;lt;port&amp;gt; Enable web GUI on the specified port
&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面的示例中，我们在 &lt;code>pipy.js&lt;/code> 文件中键入了几行代码（具体代码在后续教程中进行说明）实现了简单的请求/响应。假如要修改响应的内容要怎么办？比如返回 “Hello World!”&lt;/p>
&lt;ol>
&lt;li>&lt;code>CTRL+C&lt;/code>退出进程&lt;/li>
&lt;li>修改脚本文件里的响应内容&lt;/li>
&lt;li>重新启动 Pipy&lt;/li>
&lt;/ol>
&lt;p>有没有更简单的方法？有！&lt;/p>
&lt;h2 id="web-控制台">web 控制台&lt;/h2>
&lt;p>Pipy 人性化地提供了一个内置的 web 控制台，方便对脚本进行编辑和调试。&lt;/p>
&lt;p>web 控制台的启动也同样简单，前面查看 Pipy 的帮助信息时有看到 &lt;code>--gui-port=&amp;lt;port&amp;gt; Enable web GUI on the specified port&lt;/code>。&lt;/p>
&lt;p>我们调整下前面的命令，加上 &lt;code>--gui-port=6060&lt;/code> 选项：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ bin/pipy --gui-port&lt;span class="o">=&lt;/span>&lt;span class="m">6060&lt;/span> /tmp/pipy.js
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>gui&lt;span class="o">]&lt;/span> Starting GUI service...
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>listener&lt;span class="o">]&lt;/span> Listening on 0.0.0.0:6060
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> Module /pipy.js
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="o">===============&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>Listen on 0.0.0.0:6080&lt;span class="o">]&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> -----&amp;gt;&lt;span class="p">|&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="p">|&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> decodeHttpRequest
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> replaceMessage
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> encodeHttpResponse
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &lt;span class="p">|&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span> &amp;lt;-----&lt;span class="p">|&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>config&lt;span class="o">]&lt;/span>
2021-06-23 00:24:49 &lt;span class="o">[&lt;/span>info&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>listener&lt;span class="o">]&lt;/span> Listening on 0.0.0.0:6080
&lt;/code>&lt;/pre>&lt;/div>&lt;p>命令输出中说明了 GUI 监听在 &lt;code>6060&lt;/code> 端口。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/23/20210623001852.png" alt="首页">&lt;/p>
&lt;p>从左到右依次为：导航栏、当前生效的模块及 Pipeline、选中的 Pipeline 的结构、日志。&lt;/p>
&lt;p>导航栏从上到下依次为：首页、脚本编辑器、日志。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/23/20210623002620.png" alt="Pipeline 结构">&lt;/p>
&lt;p>选中一个 Pipeline 知乎，第三栏中会展示出该 Pipeline 所使用的过滤器。&lt;/p>
&lt;p>前面我们提出了问题：如何快速的修改脚本并调试。打开脚本编辑器，选中我们的脚本文件：&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/23/20210623003220.png" alt="脚本编辑器">&lt;/p>
&lt;p>脚本编辑器上方的工具栏中从左到右依次为：增加脚本、删除脚本、保存、启动、停止、重载、打开/关闭日志面板。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/23/20210623003600.png" alt="修改响应内容">&lt;/p>
&lt;p>修改响应内容后，可以看到工具栏的保存按钮高亮了，这里需要点击进行保存。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ curl http://127.0.0.1:6080
Hello!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>只保存还不够，需要点击重载按钮。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ curl http://127.0.0.1:6080
Hello World!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>假如我们注释掉了 &lt;code>replaceMessage&lt;/code> 过滤器的部分，然后保存、重载。&lt;/p>
&lt;p>&lt;img src="https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/06/23/20210623003904.png" alt="删除过滤器">&lt;/p>
&lt;p>可以看到最右侧的 Pipeline 结构也更新了：&lt;code>replaceMessage&lt;/code> 过滤器被移除。再次发起请求，这次没有任何内容返回。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ curl http://127.0.0.1:6080
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>